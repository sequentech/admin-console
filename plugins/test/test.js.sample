/**
 * This file is part of admin-console.
 * Copyright (C) 2015-2016  Sequent Tech Inc <legal@sequentech.io>

 * admin-console is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License.

 * admin-console  is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License
 * along with admin-console.  If not, see <http://www.gnu.org/licenses/>.
**/

angular.module('avAdmin').run(function(Plugins) {
    // Adding to the sidebar params:
    var p = {
             name: 'test',
             head: false,
             link: 'admin.test',
             directive: 'test',
             menu: {
                icon: 'check', text: 'testplugin.text'
             }
            };

    Plugins.add(p);
});

// Using the admin controller to get the topbar and the sidebar
// The state name should be admin.NAME
angular.module('admin-console').config(
  function($stateProvider) {
    $stateProvider
      .state('admin.test',
        { url: '/test',
          templateUrl: 'avAdmin/admin-controller/admin-controller.html',
          controller: 'AdminController'
        });
  });

// Custom directive, the name should be SequentPluginNAME and here we can put the magic
angular.module('avAdmin')
  .directive('SequentPluginTest', function() {
    function link(scope, element, attrs) {
    }

    return {
      restrict: 'AEC',
      scope: {
      },
      link: link,
      template: '<h1 ng-i18next>testplugin.header</h1>'
    };
  });

// Registering signals and hooks
angular.module('avAdmin').run(function(Plugins) {
    function signalHandler(sig, data) {
        if (sig === 'plugins-loaded') {
            console.log("LOADED signal received in test plugin", data);
        }
    }

    // if we return false here, the ejecution will be affected
    function hookHandler(hook, data) {
        if (hook === 'plugins-loaded') {
            console.log("LOADED signal received in test plugin", data);
            return false;
        }
        return true;
    }

    // subscribe to a signal and hook
    Plugins.signals.add(signalHandler);
    Plugins.hooks.push(hookHandler);
});
