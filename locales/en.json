{
  "continue": "Continue",
  "ok": "Ok",
  "yes": "yes",
  "no": "no",
  "eg": "eg.",
  "next": "Next",
  "done": "Done",
  "loading": "Loading...",
  "nomore": "No more elements",
  "registered": "registered",
  "created": "created",
  "started": "started",
  "stopped": "stopped",
  "tally_ok": "tally done",
  "results_ok": "results done",
  "results_pub": "results published",
  "doing_tally": "doing the tally",
  "tally_error": "tally error",
  "resumed": "Resumed",
  "suspended": "Suspended",

  "app": {
    "name": "Agora Voting"
  },
  "avCommon": {
    "cancel": "Cancel",
    "poweredBy": "Powered by <strong><a href=\"__url__\" target=\"_blank\">__name__</a></strong>",
    "shareLink": "Tweet this election!",
    "votingSystem": "Voting System",
    "votings": {"plurality-at-large": "Plurality at large", "borda-nauru": "Nauru's Borda Count or Borda Dowdall (1/n)", "borda": "Borda Count (traditional)", "pairwise-beta": "Pairwise (beta-distribution)", "desborda": "DesBorda", "cumulative": "Cumulative voting"}
  },
  "avAdmin": {
    "profile": {
      "title": "Profile",
      "save": "Save changes"
    },
    "onboarding": {
      "help_tour": {
        "step0_help_title": "Help",
        "step0_help_content": "If you need any further help, you can click here to get it. You can <strong>launch again the tour</strong> there too!",

        "step1_chat_title": "Chat with us",
        "step1_chat_content": "If you have any question, we'll be glad to answer you quickly through the chat."
      },
      "dashboard_tour": {
        "step0_test_title": "Test election",
        "step0_test_content": "You have created a test election. Test elections have limited census size and a real election can only be created out of a successfully tallied test election.",

        "step1_real_title": "Real election",
        "step1_real_content": "Once this election is tallied, you will be able to create a real election clicking here.",

        "step2_status_title": "Election status",
        "step2_status_content": "This section shows you the state of the election and a button to move election to the next status.",

        "step3_start_title": "Start the election",
        "step3_start_content": "Click this button to start the election and send an authentication email to all census."
      },
      "hello_tour": {
        "step0_create_title": "Create an election",
        "step0_create_content": "Start creating a test election clicking in the <strong>New Election</strong> button. <br><br>Or watch the intro video:<br><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/eTZ3TQw5G_c?rel=0&amp;showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>",

        "step1_change_title": "Change the title",
        "step1_change_content": "Now you can edit all the details of the election, for example you could edit the election's title clicking title here.",

        "step2_sidebar_title": "Sidebar",
        "step2_sidebar_content": "You can personalize the election clicking through these sections.",

        "step3_review_title": "Review election to create it",
        "step3_review_content": "Once you are done configuring the election, click the <strong>Create Election</strong> section to review and then create the election.",

        "step4_create2_title": "Create the election",
        "step4_create2_content": "<strong>Click this button</strong> to create the election. <br><br>Note that the election won't be created until you do so, and for security reasons it won't be editable afterwards."
      }
    },
    "ballotBox": {
      "title": "Ballot Boxes",
      "intro": "List of ballot boxes and their tally sheets.",
      "manage": "Search and filter looking for ballot boxes",
      "filter": "Search here..",
      "tableColumn": {
        "idColumnHeader": "Id",
        "nameColumnHeader": "Title",
        "actionsColumnHeader": "Actions",
        "lastUpdateColumnHeader": "Last Update",
        "versionColumnHeader": "Number of versions",
        "usernameColumnHeader": "Username"
      },
      "modals": {
          "createBallotBox": {
            "header": "Create ballot boxes",
            "body": "Add one ballot box name per line. It won't create any if any of them already exist.",
            "holder": "Ballot box name 1\nBallot box name 2..",
            "button": "Confirm and CREATE ballot boxes"
          },
          "deleteBallotBox": {
            "header": "Confirm to DELETE ballot box",
            "body": "Please to confirm that you want to delete the ballot box __name__ and all the tally sheets related to it, write 'DELETE' below:",
            "holder": "Write DELETE here to confirm..",
            "ok": "Confirm and DELETE ballot box"
          },
          "deleteTallySheet": {
            "header": "Confirm to DELETE tally sheet",
            "body": "Please to confirm that you want to delete the tally sheet with id __id__ for ballot box __name__, write 'DELETE' below:",
            "holder": "Write DELETE here to confirm..",
            "ok": "Confirm and DELETE tally sheet"
          },
          "checkingBallotBox": {
            "header": "Creating ballot boxes",
            "checkingExisting": "Checking if any ballot box requested already exist..",
            "hasExisting": "No ballot box was created, because the following already exist: ",
            "errorCheckingExisting": "There was an error checking existing ballot boxes:",
            "creatingBoxes": "Creating the ballot boxes: ",
            "errorCreatingBoxes": "Error while creating some ballot boxes: ",
            "success": "All the ballot boxes were created successfully.",
            "button": "Close"
          },
          "writeTallySheet": {
            "step0header": "Step 1 of 3: Register tally sheet",
            "step1header": "Step 2 of 3: Review and send the tally sheet",
            "step2header": "Step 3 of 3: Successfully added tally sheet",
            "reviewStep": "Please review carefully the tally sheet before sending it",
            "ballotBoxLabel": "Ballot box name:",
            "registeredVotesLabel": "Number of voters registered:",
            "voteCountLabel": "Number of votes:",
            "electionIdLabel": "Election id:",
            "electionTitleLabel": "Election title:",
            "observationsLabel": "Observaciones:",
            "continue": "Continue and review",
            "blankVotesLabel": "Blank votes:",
            "nullVotesLabel": "Null votes:",
            "mismatchedNumbersError": "The numbers don't add up or are invalid, plese review them",
            "mismatchTotalCount": "The registered number of votes and the entered number of votes differ",
            "send": "Confirm and send tally sheet",
            "backAndEdit": "Go back and edit",
            "success": "Congratulations, you successfully added the tally sheet!",
            "okClose": "Close"
          },
          "viewTallySheet": {
            "header": "View tally sheet",
            "edit": "Edit and change tally sheet",
            "tallySheetIdLabel": "Tally sheet id:"
          }
      },
      "viewTallySheetAction": "View tally sheet",
      "writeTallySheetAction": "Write tally sheet..",
      "deleteTallySheetAction": "Delete tally sheet..",
      "deleteBallotBoxAction": "Delete ballot box.."
    },
    "activityLog": {
      "title": "Activity Log",
      "intro": "List of actions executed in the election.",
      "manage": "Search and filter the activity log",
      "filter": "Search here..",
      "filteredEmptyResults": "No results for this filter.",
      "tableColumn": {
        "idColumnHeader": "Id",
        "executerIdColumnHeader": "Executer Id",
        "creationDateColumnHeader": "Created at",
        "receiverIdColumnHeader": "Receiver Id",
        "actionColumnHeader": "Description",
        "commentColumnHeader": "Comment"
      },
      "action": {
        "user": {
          "activate": "<i>__executer_username__ (__executer_id__)</i> <strong>activated</strong> user <i>__receiver_username__ (__receiver_id__)</i>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "deactivate": "<i>__executer_username__ (__executer_id__)</i> <strong>deactivated</strong> user <i>__receiver_username__ (__receiver_id__)</i> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "authenticate": "<i>__receiver_username__ (__receiver_id__)</i> <strong>authenticated</strong>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "register": "<i>__receiver_username__ (__receiver_id__)</i> <strong>registered</strong>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "successful-login": "<i>__executer_username__ (__executer_id__)</i> <strong>voted</strong>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "generate-auth-code": "<i>__executer_username__ (__executer_id__)</i> <strong>generated authentication code</strong> for __receiver_username__ (__receiver_id__)</i> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "send-auth": "<i>__executer_username__ (__executer_id__)</i> <strong>sent authentication codes</strong> to <i>__receiver_username__ (__receiver_id__)</i>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "resend-authcode": "There was a request to <strong>send authentication codes</strong> to <i>__receiver_username__ (__receiver_id__)</i>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
	        "added-to-census":  "<i>__executer_username__ (__executer_id__)</i> <strong>added to census</strong> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> to <i>__receiver_username__(__receiver_id__)</i> __metadata__",
          "deleted-from-census":  "<i>__executer_username__ (__executer_id__)</i> <strong>deleted from census</strong> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> the user __metadata__",
          "deleted-voted-from-census":  "<i>__executer_username__ (__executer_id__)</i> <strong>deleted from census</strong> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> the user __metadata__ (<b>who had voted</b>)",
          "reset-voter":  "<i>__executer_username__ (__executer_id__)</i> <strong>reset voter</strong> <i>__receiver_username__ (__receiver_id__)</i> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>. Voter data changed from __before__  to __after__"
        },
        "authevent": {
          "create": "<i>__executer_username__ (__executer_id__)</i> <strong>created</strong> election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "callback": "<i>__executer_username__ (__executer_id__)</i> <strong>received callback</strong>  in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "edit": "<i>__executer_username__ (__executer_id__)</i> <strong>edited</strong> election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "start": "<i>__executer_username__ (__executer_id__)</i> <strong>started</strong> election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "stop": "<i>__executer_username__ (__executer_id__)</i> <strong>stopped</strong> election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "tally": "<i>__executer_username__ (__executer_id__)</i> <strong>requested to tally</strong> election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__ <i>__metadata__</i>",
          "tally_error": "<strong>error when launching tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__ <i>__metadata__</i>",
          "virtual_tally_error": "<strong>error when launching virtual tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> <i>__metadata__</i>",
          "tally_error_no_votes": "<strong>tally not executed because there were no votes</strong> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__ <i>__metadata__</i>",
          "calculate_results_success": "<i>__executer_username__ (__executer_id__)</i> <strong>calculated results</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "calculate_results_error": "<i>__executer_username__ (__executer_id__)</i> <strong>tried to calculate results with error</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "publish_results_success": "<i>__executer_username__ (__executer_id__)</i> <strong>published results</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "publish_results_error": "<i>__executer_username__ (__executer_id__)</i> <strong>tried to publish results with error</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "unpublish_results_success": "<i>__executer_username__ (__executer_id__)</i> <strong>unpublished results</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "unpublish_results_error": "<i>__executer_username__ (__executer_id__)</i> <strong>tried to unpublish results with error</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "allow_tally_success": "<i>__executer_username__ (__executer_id__)</i> <strong>allowed tally</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "allow_tally_error": "<i>__executer_username__ (__executer_id__)</i> <strong>tried to allow tally with error</strong> for election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "tally_started": "<strong>started the tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__ <i>__metadata__</i>",
          "tally_error_during_tally": "<strong>error during tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "tally_success": "<strong>successful tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a> __child_election__",
          "virtual_tally_success": "<strong>successful virtual tally</strong> of election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "delete": "<i>__executer_username__ (__executer_id__)</i> <strong>deleted</strong> election __event_id__",
          "archive": "<i>__executer_username__ (__executer_id__)</i> <strong>archived</strong> election __event_id__",
          "unarchive": "<i>__executer_username__ (__executer_id__)</i> <strong>unarchived</strong> election __event_id__"
        },
        "ballotBox": {
          "create": "<i>__executer_username__ (__executer_id__)</i> <strong>created</strong> ballot box <a href=\"/admin/ballot-box/__event_id__?view_ballot_box_name=__ballot_box_name__\">__ballot_box_name__</a> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "delete": "<i>__executer_username__ (__executer_id__)</i> <strong>deleted</strong> ballot box <strong>__ballot_box_name__</strong> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>"
        },
        "tallySheet": {
          "create": "<i>__executer_username__ (__executer_id__)</i> <strong>uploaded</strong> a <a href=\"/admin/ballot-box/__event_id__?view_tally_sheet_id=__tally_sheet_id__&ballot_box_id=__ballot_box_id__\">tally sheet</a> for ballot box <a href=\"/admin/ballot-box/__event_id__?view_ballot_box_name=__ballot_box_name__\">__ballot_box_name__</a> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>",
          "delete": "<i>__executer_username__ (__executer_id__)</i> <strong>deleted</strong> a <a href=\"/admin/ballot-box/__event_id__?view_tally_sheet_from_action_id=__action_id__&ballot_box_name=__ballot_box_name__&ballot_box_id=__ballot_box_id__\">tally sheet</a> for ballot box <a href=\"/admin/ballot-box/__event_id__?view_ballot_box_name=__ballot_box_name__\">__ballot_box_name__</a> in election <a href=\"/admin/dashboard/__event_id__\">__event_id__</a>"
        }
      }
    },
    "show_points_policy": {
      "label": "Show points",
      "text": "Show the points that the ballot is giving to each selected option"
    },
    "setting": {
      "helpTooltip": "Click to expand/collapse help text about this setting"
    },
    "cumulative": {
      "number_of_checkboxes": {
        "title": "Number of checkboxes",
        "text": "Number of checkboxes to show for each answer"
      }
    },
    "shuffling_policy": {
      "categories_label": "Ramdomize categories",
      "categories_label_text": "Check to randomize",
      "options_label": "Randomize options",
      "list_label": "List of categories to randomize",
      "list_muted": "Add here the categories to shuffle their options",
      "list_placeholder": "Add the name of the categories, separated by comma",
      "dont-shuffle": "Don't shuffle the options. All voters will see the options in the same order in the voting booth",
      "shuffle-all": "Shuffle all options. Each voter will see the options for this question in a different order in the voting booth. If there are different categories, they will also be randomized.",
      "shuffle-some": "Shuffle the options of a selected list of categories."
    },
    "results": {
      "downloadData": "Download data",
      "downloadBallotsCsv": "Download Ballots Spreadsheet (CSV format)",
      "downloadBallotsJson": "Download Ballots (JSON format)",
      "downloadResultsCsv": "Download Election Results (CSV format)",
      "downloadResultsJson": "Download Election Results (JSON format)",
      "downloadResultsPretty": "Download Election Results (Text format)",
      "downloadResultsPDF": "Download Election Results (PDF format)"
    },
    "topbar": {
        "home": "Home",
        "features": "Features",
        "help": "Help",
        "freesignup": "Free sign up",
        "login": "Enter",
        "logout": "logout"
    },
    "learnMore": "Learn more..",
    "adminFields": {
      "title": "Admin fields",
      "intro": "Admin fields",
      "maxError": "__value__ is greater than __max__",
      "minError": "__value__ is lower than __min__",
      "textError": "error on text __value__",
      "emailError": "error on email __value__",
      "numberError": "__value__ must be a number",
      "requiredError": "Missing value on required field"
    },
    "sidebar": {
        "elections": "Elections",
        "newel": "New election",
        "import": "Import",
        "currentel": "Current election",
        "dashboard": "Dashboard",
        "activityLog": "Activity Log",
        "basic": "Basic details",
        "questions": "Questions",
        "censusConfig": "Census Configuration",
        "census": "Census Data",
        "successAction": "Success Action",
        "auth": "Authentication",
        "tally": "Tally",
        "create": "Create Election",
        "myAccount": "My account",
        "billinfo": "Billing information",
        "billhistory": "Billing history",
        "ballotBox": "Ballot Boxes",
        "buy": "Buy credits",
        "adminFields": "Admin fields"
    },
    "elections": {
        "filter": "Filter...",
        "list": {
          "all": "Active",
          "archived": "Archived"
        },
        "test": "test",
        "draft": "draft",
        "real": "real",
        "status": "Status",
        "participation": "Participation",
        "useDraftModal": {
          "title": "Do you want to load the election draft?",
          "body": "This action will load the election draft with title '__title__'. This action will load this draft and subsequent modifications of its configuration will rewrite the saved draft. Do you wish to proceed?"
        },
        "eraseDraftModal": {
          "title": "Do you want to erase the election draft?",
          "body": "This action will erase the election draft with title '__title__'. This action cannot be reverted. Do you wish to proceed?"
        }
    },
    "action": {
        "create": "create",
        "start": "start",
        "stop": "stop",
        "tally": "tally",
        "publish": "publish"
    },
    "import": {
        "desc": "Importing an election from csv allows you to manage and automate the creation of elections details from an external source. <a href=\"https://docs.google.com/spreadsheets/d/1WTzswqiuRllZIm90A-SBQ0kbVYDQI1jZvKcvL8ruMIY/edit?usp=sharing\" target=\"_blank\">Read more about the CSV election format here</a>. If you want to create many elections at once, you can use the API or contact us.",
        "file": "Select file",
        "dropFilesHere": "Drop CSV file here"
    },
    "dashboard": {
        "writeInResults": "(Write-in)",
        "chilldrenResultsTitle": "Select the election results to view:",
        "createRealElection": "Create REAL election",
        "duplicateElection": "Duplicate election",
        "sendAuthCodes": "Send auth codes",
        "donow": "click to do now",
        "census": "Census",
        "questions": "Questions",
        "answers": "Answers",
        "status": "Status",
        "authentication": "Authentication",
        "electionid": "Election Id",
        "authorities": "Authorities",
        "create": "Create",
        "start": "Start voting",
        "stop": "Stop voting",
        "tally": "Tally",
        "calculate": "Calculate results",
        "publish": "Publish results",
        "calculateAgain": "Calculate results again",
        "doingtally": "Doing the tally",
        "results": "Results",
        "blankvotes": "Blank votes",
        "nullvotes": "Null votes",
        "optionvotes": "Votes to options",
        "option": "Candidature",
        "votes": "Votes",
        "winner": "Winner position",
        "publicResultsUrl": "Public results url",
        "electionPublic": "Election public site",
        "censussend": "Census send correctly",
        "preview": "Demo voting booth",
        "actions": {
          "actionsLabel": "Actions",
          "changeSocial": "Edit social...",
          "sendAuthCodes": "Send auth codes...",
          "archiveElection": "Archive election...",
          "unarchiveElection": "Unarchive election...",
          "tally": "Launch tally...",
          "allowTally": "Allow to launch tally...",
          "calculateResults": "Calculate results...",
          "editChildrenParent": "Edit Children and Parent elections...",
          "startElection": "Start election...",
          "stopElection": "Stop election...",
          "publishResults": "Publish results...",
          "unpublishResults": "Unpublish results...",
          "suspendElection": "Suspend election...",
          "resumeElection": "Resume election.."
        },
        "modals": {
          "createHeader": "Create election",
          "createBody": "To create the election, its configuration is sent to the election authorities and they create election encryption public keys. After that, the election is no longer editable. Before doing this, please check that the configuration is correct (for example taking a look at the demo voting booth). If you need to change the election after this, you will have to create a new one.",
          "confirmCreateButton": "Confirm and CREATE election",
          "createRealHeader": "Create real election",
          "createRealBody": "This is a test election. For security reasons, real elections can only be created out of successful test elections. You must complete the election process up to the results publish step.",
          "confirmCreateRealButton": "Confirm and CREATE real election",
          "calculateResultsHeader": "Calculate results",
          "calculateResultsBody": "The election has been tallied and the next step is to calculate the results. Although the election can only be tallied once, the election results can be calculated as many times as you need before publishing them.",
          "calculateResultsButton": "Confirm and CALCULATE results",
          "calculateResultsSuccess": "Results calculation requested",
          "startHeader": "Start election",
          "startBody": "Please be aware that once you start the elections, voters will be able to vote until the election is stopped",
          "confirmStartButton": "Confirm and START the election",
          "stopHeader": "Stop election",
          "stopBody": "Once you stop the election, people will not be able to vote anymore.  Please be aware of this and exercise caution",
          "confirmStopButton": "Confirm and STOP the election",
          "tallyHeader": "Tally election",
          "tallyIntro": "The tally process is run by the election authorities and may take a while, depending on the number of votes. It involves a mathematically verifiable cryptographic process that anonymizes and obtains the content of each vote.",
          "askFilterBallots": "Before launching the tally, you need to select what set of ballots to use in the tally. It's very important that you <strong>choose carefully, because once a tally has been done you cannot launch another tally</strong> with a second set of ballots. <br/><br/>These are the options you have:",
          "censusDumpMode": {
            "allHeader": "Tally all cast ballots",
            "allDescription": "Even if a voter has been removed from the census or is marked as not active, if this voter has cast a ballot it will be counted.",
            "activeHeader": "Tally only cast ballots active in the current census",
            "activeDescription": "<strong>Only choose this option if you know what you are doing</strong>. The ballots corresponding to people that are not included in the census, or those corresponding to inactive people in the census <strong>will be discarded and not counted</strong>.",
            "chooseChildrenToTally": "Choose what elections to tally:"
          },
          "confirmTallyButton": "Confirm and TALLY the election",
          "tallyActiveHeader": "Tally only active voters",
          "tallyActiveIntro": "We will start downloading all the voters to detect which are active and only tally those if you confirm you want to do so. <strong>This decision is final</strong>, the software does not allow to undo a tally or to do a second one with a different set of ballots. <br/><br/>To modify the list of active users, cancel this modal and edit the active status in the Census Data lateral menu. If you don't want to do the tally, just close this dialog.",
          "downloadingCensus": "Downloaded __downloaded__ of __total__ people in census",
          "confirmTallyActiveButton": "Confirm and TALLY __totalActive__ out of __total__ elegible voters",
          "launchTallySuccess": "Tally launched successfully",
          "publishResultsHeader": "Publish election results",
          "publishResultsBody": "Currently only the election administrators have access to the calculated election results. When you publish the results, these will be made public for everyone to see.",
          "confirmPublishResultsButton": "Confirm and PUBLISH election results",
          "changeSocial": {
            "header": "Edit social networks share buttons",
            "confirmButton": "Confirm and SAVE social networks configuration",
            "title": "Social Network Buttons",
            "new": "New button",
            "socialNetworkLabel": "Social Network",
            "buttonTextLabel": "Button text",
            "socialMessageLabel": "Share text",
            "socialMessagePlaceholder": "Text to be shared on social networks (use __URL__ for the default election url)",
            "buttonTextPlaceholder":  "Text for the share button (it can be empty)",
            "nameLabel": "Name",
            "infoHeader": "Configuration saved",
            "infoBody": "The social networks buttons configuration has been successfully saved.",
            "socialUrlLabel": "Link",
            "socialUrlPlaceholder": "Election link to be shared on social networks (use __URL__ for the default election url)"
          },
          "editCalculateResultsJsonModal": {
            "editJson" : "Edit JSON",
            "title": "Edit Calculate Results Json",
            "body": "This dialog allows you to edit the calculate results json. Use this only if you know what you are doing.",
            "confirmEdit": "Finish edit"
          },
          "sendAuthCodes": {
            "editMessageStep": {
              "header": "Send authentication codes (Step __step__ of __total__)",
              "helpInfo": "This action will send a message to all the registered electors in the census. Note that sending many messages can be considered as SPAM, so proceed with caution. Also, please review the message that will be sent before proceeding.",
              "sendButton": "Review message before sending authentication codes to ALL census",
              "sendSelectedButton": "Review message before sending authentication codes to SELECTED users"
            },
            "confirmStep": {
              "header": "Send authentication codes (Step __step__ of __total__)",
              "helpInfo": "You will send the authentication to __voters__ electors. Please, verify that everything is correct. If you have any trouble please contact us at __email__ or calling us at __tlf__.",
              "sendButton": "Confirm and send the messages",
              "invalidMsg": "Yes, I want to send these messages without authentication code / URL",
              "messageHeader": "Preview",
              "editMessageAction": "Edit",

              "unknownError": "The messages were not sent nor charged. An unknown error occurred when sending the messages. If this problem persists, please contact us to resolve this issue at __email__ or calling us at __tlf__."
            }
          },
          "archive": {
            "header": "Confirm archive election",
            "body": "This action will archive the election. It will fail if the election is already archived. Archiving an election removes the election from the election list in the admin interface but it can still be accessed from the archived elections list. It can also be unarchived later.",
            "confirmButton": "Archive election",
            "success": "Election archived successfully"
          },
          "unarchive": {
            "header": "Confirm unarchive election",
            "body": "This action will unarchive the election. It will fail if the election is not currently in an archived state. UnArchiving an election makes it appear again in the election list in the admin interface. It can also be archived again later.",
            "confirmButton": "Unarchive election",
            "success": "Election unarchived successfully"
          },
          "editChildrenParent": {
            "header": "Edit Children and Parent election info",
            "body": "Edit in the textarea the parent_id and children_election_info in JSON.",
            "confirmButton": "Send updated data",
            "success": "Election children and parent info updated successfully"
          },
          "unpublishResults": {
            "header": "Unpublish election results",
            "body": "The electoral results will not show in this election public website.",
            "confirmButton": "Confirm and unpublish electoral results",
            "success": "Electoral results have been unpublished successfully"
          },
          "allowTally": {
            "header": "Allow to do election tally",
            "body": "After this action is executed, any administrator allowed to execute a tally will be able to do so.",
            "confirmButton": "Allow to do election tally",
            "success": "Allowed to do election tally"
          },
          "generatePDFAuthCodes": {
            "header": "Generate PDF voter authentication code",
            "body": "Generate PDF authentication code for the selected voter. Even if the voter has not filled the fill-in fields, he will be able to vote using these code and the link in the PDF.",
            "confirmButton": "GENERATE PDF voter authentication code"
          },
          "resetVoterToPreRegistration": {
            "header": "Reset voter to pre-registration state",
            "body": "Reset the voter to pre-registration state. This means that any field that was filled in by the voter during registration will be reset, but the data that was part of the census during pre-registration will not change. You can add below a comment explaining why you are executing this action to this voter:",
            "confirmButton": "RESET VOTER to pre-registration state"
          },
          "suspend": {
            "header": "Suspend election voting period",
            "body": "Suspending an election pauses temporarily the voting period, preventing voters from casting a vote. However, after that you can resume the voting period and this can happen multiple times.",
            "confirmButton": "SUSPEND the election voting period"
          },
          "resume": {
            "header": "Resume election voting period",
            "body": "Resuming the election when it has previously been suspend temporarily will allow again voters casting a vote.",
            "confirmButton": "RESUME the election voting period"
          }
        }
    },
    "basic": {
        "intro": "Creating an election requires multiple steps, but it is not difficult. It will only take 5 minutes. Please read the Administrator Manual, linked in the help icon at the top navegation bar.",
        "title": { "label": "Title", "placeholder": "eg.New Board of Directors", "labelH3": "__index__. Election titled: __title__" },
        "description": { "label": "Description", "placeholder": "Description will be shown" },
        "logo_url": { "label": "Custom logo", "placeholder": "URL for a custom logo for this election. Maximum recommended size is 150x150 px." },
        "layout": { "label": "Layout", "placeholder": "Specifies how the whole election will be displayed" },
        "layouts": { "simple": "Simple", "2questions-conditional": "Yes/No", "pcandidates-election": "Table Candidates" },
        "theme": { "label": "Theme", "placeholder": "How will the election look like?" },
        "themes": { "default": "Default", "podemos": "Purple" },
        "questionOptionsSummary": "<strong>__num_answers__</strong> candidates. Voters select between <strong>__min__</strong> and <strong>__max__</strong> options  and there are <strong>__num_winners__</strong> winners. The tally method is <strong>__tally_method__</strong>. Randomize categories: <strong>shuffle_categories</strong>, randomize all options: <strong>shuffle_all_options</strong>.",
        "censusSize": "__num__ people",
        "registerAndCreateElection": "Not only register the election, but also create it at the election authorities. This means you won't be able to modify the election.",
        "num_successful_logins_allowed" : {
          "label": "Number of votes per voter",
          "placeholder": "Maximum number of times voters are allowed to cast their vote. Only their last vote will count. If this number is zero, voters will be able to cast their vote as many times as they want",
          "minError": "The number of possible revotes is __num_successful_logins_allowed__ but it should be 0 or higher",
          "inputError": "__num_successful_logins_allowed__ is not a number"
        }
    },
    "questions": {
        "new": "New question",
        "winners": {
          "label": "Number of winners",
          "placeholder": "How many winners should there be? Minimum is 1 and maximum is the number of options",
          "numOptionsError": "There are __winners__ winners but only __cands__ candidates",
          "minError": "There must be at least 1 winner"
          },
        "min": {
          "label": "Minimum number of selected options",
          "placeholder": "How many options should a voter select in this question? Minimum is zero wich would allow blank votes",
          "maxError": "Minimum number of choosable candidatures can be at most __max__",
          "minError": "Cannot be negative"
          },
        "max": {
          "label": "Maximum number of selected options",
          "placeholder": "How many options can a voter select in this question?",
          "numOptionsError": "Voters can choose up to __max__ candidatures, but there are only __cands__ candidatures",
          "minError": "Must be at least 1 "
        },
        "random": {"label": "Randomize options order", "placeholder": "When randomization of the options order is active, each voter will see the options for this question in a different order in the voting booth"},
        "candidates": {
          "label": "Candidates",
          "placeholder": "Candidate options that can be voted for this question",
          "minError": "There must be at least one candidate"
        },
        "newopt": "New option name",
        "layout": {
          "label": "Layout",
          "placeholder": "Specify how the question will be shown",
          "accordion": "Normal",
          "circles": "Images with details",
          "conditional-accordion": "Conditional accordion",
          "simultaneous-questions": "Simultaneous questions",
          "cumulative-tally-help": "The tally method cummulative is only supported for simultaneous questions"
        },
        "option": {
          "textFieldLabel": "Text",
          "textFieldPlaceholder": "Candidate option text",
          "detailsFieldLabel": "Details",
          "detailsFieldPlaceholder": "More detailed information about the candidate option",
          "categoryFieldLabel": "Category",
          "categoryFieldPlaceholder": "Used to group candidates in teams in some layouts",
          "urlFieldLabel": "Url",
          "urlFieldPlaceholder": "https://example.com",
          "imageUrlFieldLabel": "Image Url",
          "imageUrlFieldPlaceholder": "https://example.com/path/to/image.jpg"
        }
    },
    "censusConfig": {
        "intro": "The census specifies who can vote and the details we need from each elector. You can configure it here"
    },
    "census": {
        "intro": "The census specifies who can vote and the details we need from each elector. You can manage it here",
        "reg": { "label": "Registration", "placeholder": "How the census is generated?" },
        "census": {
          "open": "Open registration",
          "openDescription": "Census can not only be generated by election administrators, but also individuals can register following the authentication process.",
          "close": "Closed registration",
          "closeDescription": "The census is generated by administrators. Third parties cannot register into the census."
        },

        "modals": {
          "comment": "Comment",
          "csvLoadingHeader": "Uploading CSV to census",
          "csvLoadingBody": "Please click on the start upload button to add the users from the CSV to the census. Please wait until the process is finished and don't close this window.",
          "csvLoadingStartButton": "Start upload NOW",
          "addCsvHeader": "Add CSV to census",
          "addCsvBody": "Here you can add many people at once. The format is CSV, one person per line. Use semicolon to split fields, in order. Note that no data validation is done, so it's up to you to insert valid data.",
          "addCsvTextareaPlaceholder": "one voter per line, keep the field order",
          "confirmAddCsvButton": "Confirm and ADD CSV to census",

          "addPersonHeader": "Add Person to census",
          "addPersonBody": "Manually add a single person to the census. Note that no data validation is done, so it's up to you to insert valid data.",
          "addPersonChildrenElections": "Select in which children elections can this person vote:",
          "confirmAddPersonButton": "Confirm and ADD person to census",

          "removePeopleHeader": "Remove selected people from census",
          "removePeopleBody": "Removing the selected __num__ people from the census is irreversible. Note that this will not remove their votes if they have voted.",
          "confirmRemovePeopleButton": "Confirm and REMOVE selected __num__ people from census",

          "activatePeopleHeader": "Activate selected people from census",
          "activatePeopleBody": "Activating the selected __num__ people. This will allow these people to vote",
          "confirmActivatePeopleButton": "Confirm and activate selected __num__ people in census",

          "deactivatePeopleHeader": "Deactivate selected people from census",
          "deactivatePeopleBody": "Deactivating the selected __num__ people. This will NOT allow these people to vote",
          "confirmDeactivatePeopleButton": "Confirm and deactivate selected __num__ people in census",

          "exportAllCensusHeader": "Export all census in CSV",
          "exportAllCensusBody": "Here you can download the whole census in a CSV (Comma Separated Values) spreadsheet format, so you can process it elsewhere. There are __total__ people in your census. Depending on the size of the census, the process of downloading the whole census may take a while. Once it finishes, you will be prompted to download the census. If you have any filter active, this filter will also be applied to the downloaded CSV file.",
          "confirmexportAllCensusButton": "Confirm and download the census, with __total__ people"
        },
        "addPersonAction": "Add person...",
        "addCsvAction": "Add CSV to census...",
        "activateAction": "Activate __num__ selected people...",
        "deactivateAction": "Deactivate __num__ selected people...",
        "filteredEmptyResults": "No person matched the current filter.",
        "emptyCensus": "Census is currently empty. You can add people through the Actions button.",
        "removedCensusSuccessfully": "Removed selected people from census successfully",
        "activatedCensusSuccessfully": "Activated selected people in census successfully",
        "deactivatedCensusSuccessfully": "Deactivated selected people in census successfully",
        "generatePDFAuthCodesSuccess": "Generated PDF authentication code for a voter successfully.",
        "resetVoterToPreRegistrationSuccess": "Reset voter to pre-registration state succesfully.",
        "sentCodesSuccessfully": "Sent authentication codes successfully",

        "viewActivityOneAction": "View activity log",
        "activateOneAction": "Activate",
        "deactivateOneAction": "Deactivate",
        "removeCensusOneAction": "Remove",
        "sendAuthCodesOneAction": "Send auth codes",
        "generatePDFAuthCodesAction": "Generate PDF authentication code",
        "resetVoterToPreRegistration": "Reset voter to pre-registration state",
        "generatePDFAuthCodes": {
          "header": "Your authentication credentials are:",
          "username": "Username:", 
          "userId": "User Id:",
          "authCode": "Authentication Code:",
          "codeCreated": "Code creation time:",
          "authLink": "Authentication Link:",
          "qrCode": "QR Code for Authentication Link:"
        },

        "voted": "voted",
        "notVoted": "not voted",
        "votedColumnHeader": "Voted?",
        "childrenVotedColumnHeader": "Voted in",
        "activeColumnHeader": "Active?",
        "hasActivityColumnHeader": "Executed actions?",

        "censusadd": "Voters added to the census",
        "actionsDropdown": "Actions",
        "childrenElections": "Allowed children elections",
        "selectAllShownAction": "Select all people shown",
        "deselectAllShownAction": "Deselect all people shown",
        "exportCensusAction": "Export all census to CSV..",
        "removeCensusAction": "Remove __num__ selected people..",
        "sendAuthCodesAction": "Send auth codes to __num__ selected..",
        "idColumnHeader": "Id",
        "creationDateHeader": "Created date",
        "selectedColumnHeader": "Select",
        "emailOption": "email",
        "passwordOption": "password",
        "codeOption": "code",
        "textOption": "text",
        "tlfOption": "tel",
        "dateOption": "date",
        "intOption": "int",
        "boolOption": "bool",
        "captchaOption": "captcha",
        "textareaOption": "textarea",
        "dictOption": "Key-value",
        "fieldTypeLabel": "Type",
        "fieldRegExLabel": "Regular expression",
        "fieldRegExPlaceholder": "Advanced users only - Example: ^(1000|1010)$",
        "fieldMinLabel": "Min",
        "fieldMaxLabel": "Max",
        "fieldNameLabel": "Field name",
        "fieldNamePlaceholder": "Example: Name and Surname",
        "fieldHelpLabel": "Help text",
        "fieldHelpPlaceholder": "Example: Insert both your name and surname",
        "fieldRequiredLabel": "Required",
        "fieldAutofillLabel": "Auto fill",
        "fieldUniqueLabel": "Unique",
        "fieldRequiredAuthLabel": "Checked against census in authentication",
        "fieldMatchCensusOnRegistrationLabel": "Checked against census in registration (only for pre-registration)",
        "fieldFillIfEmptyOnRegistrationLabel": "Required on registration, but can be empty on pre-registration",
        "fieldPrivateLabel": "Private (only administrators can see and use this field)",
        "extraFieldsHeader": "Extra fields",
        "extraFieldsInfo": "Here you can define extra fields in the census in a versatile way. This allows you to do a range of things: adding extra checks against the census in closed registration, registering new fields in open registration, etc.",
        "fields": {"label": "Extra fields", "placeholder": "Voter extra fields"},
        "configurationHeader": "Configuration",
        "manage": "Manage census",
        "name": "Name",
        "required": "Required",
        "add": "Add a new field",
        "nonEditableField": "(Required by auth method)",
        "manualAdd": "Manual add",
        "export": "Export",
        "image": "View image",
        "imageModalTitle": "View image",
        "imageModalClose": "Close"
    },
    "auth": {
        "intro": "Authentication is the means used to ensure that an elector is who he sais he is. Here you need to find a balance between security, usability and cost",
        "auth": "Auth method",
        "auths": {
          "email": "Email",
          "email-otp": "Email OTP",
          "email-and-password": "Email and password", 
          "sms": "SMS", 
          "sms-otp": "SMS OTP",
          "dnie": "spanish Electronic ID (eDNI)", 
          "user-and-password": "User and password", 
          "smart-link": "Smart Link"
        },
        "sms": "SMS message",
        "smstemp": "Template used in the SMS to send to the user. Use __CODE__ to insert the SMS code and __URL__ for the authentication url, or __URL2__ to insert a link that includes the code",
        "smsdef": "This is your vote code: __CODE__",
        "email": "Email message",
        "emailsub": "Email subject",
        "emailtemp": "Template used in the Email link to send to the user. Use __CODE__ to insert the login code and __URL__ to insert the election link, or _URL2__ to insert a link that includes the code",
        "emailsubdef": "Vote now with __name__",
        "emaildef": "Vote in __URL__ with code __CODE__",
        "slugKeys": "Use the following keys to insert the users' extra fields into the message: __slug_list__"
    },
    "columnFilter": {
      "sort": "Sort:",
      "filter": "Filter:",
      "minDate": "From:",
      "maxDate": "To:",
      "noFilter": "-",
      "noSort": "-",
      "sortAsc": "Asc",
      "sortDesc": "Desc",
      "min": "min",
      "max": "max"
    },
    "create": {
        "summary": "Summary: creating __num__ elections",
        "summary__plural": "Summary: creating __num__ elections",
        "create": "Create the elections",
        "creating": "Creating the authentication for election __title__",
        "census": "Adding the census (id: __id__) __title__",
        "ballot_boxes": "Adding ballot boxes (id: __id__) __title__",
        "reg": "Registering the election (id: __id__) __title__",
        "creatingEl": "Creating election (id: __id__) __title__",
        "logHeader": "Log",
        "editElectionJsonModal": {
          "title": "Edit Election Json",
          "body": "This dialog allows you to edit the election json. Use this only if you know what you are doing.",
          "confirmEdit": "Finish edit"
        },
        "errors": {
          "election-is-array-questions": "Election '__eltitle__': list of questions is not an array",
          "election-lambda-success-action-url-mode": "Election '__eltitle__': invalid success action url",
          "election-lambda-min-email-msg": "Election '__eltitle__': email message length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-email-msg": "Election '__eltitle__': email message length is __len__ characters, exceeding the maximum of __max__",
          "election-lambda-min-email-title": "Election '__eltitle__': email title length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-email-title": "Election '__eltitle__': email title length is __len__ characters, exceeding the maximum of __max__",
          "election-lambda-min-sms-msg": "Election '__eltitle__': sms message length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-sms-msg": "Election '__eltitle__': sms message length is __len__ characters, exceeding the maximum of __max__",
          "election-lambda-checkable-lists-invalid-layout": "Election '__eltitle__': There's a question with enable_checkable_lists and an invalid question layout",
          "election-lambda-checkable-lists-categories-mismatch": "Election '__eltitle__': There's a question with enable_checkable_lists but there's no answer for each category",
          "election-array-length-min-questions": "Election '__eltitle__': there must be at least __min__ questions but there are only __num__",
          "election-array-length-max-questions": "Election '__eltitle__': there must be at most __max__ questions but there are __num__",
          "election-array-length-max-description": "Election '__eltitle__': description length is __num__, exceeding the maximum of __max__",
          "election-is-string-description": "Election '__eltitle__': description is not a string",
          "election-array-length-max-title": "Election '__eltitle__': title length is __num__, exceeding the maximum of __max__",
          "election-is-string-title": "Election '__eltitle__': title is not a string",
          "election-question-array-length-max-description": "Election '__eltitle__', question '__qtitle__': description length is __num__, exceeding the maximum of __max__",
          "election-question-is-string-description": "Election '__eltitle__', question '__qtitle__': description is not a string",
          "election-question-array-length-max-title": "Election '__eltitle__', question '__qtitle__': title length is __num__, exceeding the maximum of __max__",
          "election-question-is-string-title": "Election '__eltitle__', question '__qtitle__': title is not a string",
          "election-question-lambda-invalid-answer-ids": "Election '__eltitle__', question '__qtitle__': answer ids are invalid, please check they start with 0 and there's no missing number in between",
          "election-question-answer-array-length-max-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text length is __num__, exceeding the maximum of __max__",
          "election-question-answer-lambda-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__' and answer id '__aid__': text length is empty, but it is not a write in",
          "election-question-answer-is-string-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text is not a string",
          "election-question-answer-array-length-min-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text length is __num__, but it has to be at least __min__ characters long",
          "election-question-answer-array-length-max-details": "Election '__eltitle__', question '__qtitle__', answer '__atext__': details length is __num__, exceeding the maximum of __max__",
          "election-question-answer-is-string-details": "Election '__eltitle__', question '__qtitle__', answer '__atext__': details is not a string",
          "election-question-answer-array-length-max-category": "Election '__eltitle__', question '__qtitle__', answer '__atext__': category length is __num__, exceeding the maximum of __max__",
          "election-question-answer-is-string-category": "Election '__eltitle__', question '__qtitle__', answer '__atext__': category is not a string",
          "election-question-is-array-answers": "Election '__eltitle__': list of answers is not an array",
          "election-question-is-int-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose is not an integer or valid",
          "election-question-lambda-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is not valid",
          "election-question-is-int-num-winners": "Election '__eltitle__', question '__qtitle__': the number of winners is not an integer",
          "election-question-array-length-min-answers": "Election '__eltitle__', question '__qtitle__': there must be at least __min__ answers, but there are only __num__",
          "election-question-array-length-max-answers": "Election '__eltitle__', question '__qtitle__': there must be at most __max__ answers, but there are __num__",
          "election-question-int-size-min-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose must be a positive integer, but it's __value__",
          "election-question-int-size-max-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose is __value__, but cannot be larger than the maximum which is __max__",
          "election-question-int-size-min-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is __value__, but must be bigger or equal than the minimum which is __min__",
          "election-question-int-size-max-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is __value__, but cannot be larger than the number of candidates which is __max__",
          "election-question-int-size-min-num-winners": "Election '__eltitle__', question '__qtitle__': there must be at least one winner, but it is __value__ instead",
          "election-question-int-size-max-num-winners": "Election '__eltitle__', question '__qtitle__': the number of winners is __value__, but cannot be bigger than the number of answers which is __max__",
          "election-census-createel-unknown": "Election, an unknown error happened while adding census after creating the election: __message__",
          "election-census-is-array-admin-fields": "Election '__eltitle__': admin_fields must be an array",
          "election-census-array-length-max-admin-fields": "Election '__eltitle__': admin_fields array length is __len__, exceeding the maximum of __max__",
          "election-census-lambda-admin-fields-int-type-value": "Election '__eltitle__': the following admin fields are of integer type but their values are not integers: __admin_names__.",
          "election-census-lambda-admin-fields-email-type-value": "Election '__eltitle__': the following admin fields have invalid email values: __admin_names__.",
          "election-census-lambda-admin-fields-int-min-value": "Election '__eltitle__': the following admin fields of integer type have a value that is less than their minimum allowed value : __admin_names__.",
          "election-census-lambda-admin-fields-int-max-value": "Election '__eltitle__': there is at least one field in admin fields with int type where the value is more than the maximum allowed value",
          "election-census-lambda-admin-fields-string-type-value": "Election '__eltitle__':  the following admin fields are of string type but their values are not string: __admin_names__.",
          "election-census-lambda-admin-fields-required-value": "Election '__eltitle__': these admin fields are required but they are empty: __admin_names__.",
          "election-census-lambda-admin-fields-string-value-array-length": "Election '__eltitle__': the following admin fields of string type have a string character length that has exceeded the allowed maximum of __max__ characters: __admin_names__.",
          "election-census-lambda-admin-fields-email-value-array-length": "Election '__eltitle__': the following admin fields of email type have a string character length that has exceeded the allowed maximum of __max__ characters: __admin_names__.",
          "election-census-admin-fields-is-string-if-defined-placeholder": "Election '__eltitle__': admin field __fname__ placeholder must be a string",
          "election-census-admin-fields-array-length-if-defined-max-placeholder": "Election '__eltitle__': admin field __fname__ placeholder length is __len__ characters, exceeding the maximum of __max__",
          "election-census-admin-fields-is-string-label": "Election '__eltitle__': admin field __fname__ label must be a string",
          "election-census-admin-fields-array-length-max-label": "Election '__eltitle__': admin field __fname__ label length is __len__ characters, exceeding the maximum of __max__",
          "election-census-admin-fields-is-string-if-defined-description": "Election '__eltitle__': admin field __fname__ description must be a string",
          "election-census-admin-fields-array-length-if-defined-max-description": "Election '__eltitle__': admin field __fname__ description length is __len__ characters, exceeding the maximum of __max__",
          "election-census-admin-fields-is-string-name": "Election '__eltitle__': admin field __fname__ name must be a string",
          "election-census-admin-fields-array-length-max-name": "Election '__eltitle__': admin field __fname__ name length is __len__ characters, exceeding the maximum of __max__",
          "election-census-admin-fields-is-string-type": "Election '__eltitle__': admin field __fname__ type must be a string",
          "election-census-admin-fields-array-length-max-type": "Election '__eltitle__': admin field __fname__ type length is __len__ characters, exceeding the maximum of __max__",
          "election-census-admin-fields-lambda-min-number": "Election '__eltitle__': admin field __fname__ min must be a number",
          "election-census-admin-fields-lambda-max-number": "Election '__eltitle__': admin field __fname__ max must be a number",
          "election-census-admin-fields-lambda-step-number": "Election '__eltitle__': admin field __fname__ step must be a number",
          "election-census-admin-fields-lambda-required-boolean": "Election '__eltitle__': admin field __fname__ required must be a boolean",
          "election-census-admin-fields-lambda-private-boolean": "Election '__eltitle__': admin field __fname__ private must be a boolean"
        }
    },

    "successAction": {
      "modeIntro": "Once a user registers or authenticates, an action should be executed. Usually, it's redirected to the corresponding election voting booth, but it can also be configured to load an external URL. This is useful if you are using this just to register census and not for any active election.",

      "voteModeTitle": "Load the election's voting booth",
      "voteModeDescription": "Load the corresponding election voting booth so that the person can vote.",

      "urlModeTitle": "Redirect to URL",
      "urlModeDescription": "Load an URL that you can specify. Only https urls allowed.",
      "urlModePlaceholder": "https://example.com/foo/bar",
      "invalidUrl": "Invalid URL. Example of a valid URL: https://example.com/foo/bar"
    },
    "childrenElections": {
      "main": "Main election"
    }
  }
}
